## Project-wide Gradle settings.
#
# For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html
#
# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
# Default value: -Xmx1024m -XX:MaxPermSize=256m
# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
#
# When configured, Gradle will run in incubating parallel mode.
# This option should only be used with decoupled projects. More details, visit
# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
# org.gradle.parallel=true
#Wed Feb 08 15:28:30 HKT 2017
#systemProp.http.proxyHost=127.0.0.1
#systemProp.http.nonProxyHosts=192.168.*,*.xiaoluluanzhuang.*,*.puahome.*
android.enableD8=true
android.enableD8.desugaring=true
#android.enableIncrementalDesugaring=true
android.useAndroidX=true
android.enableJetifier=true
android.debug.obsoleteApi=true
#vivoX21A运行时会出现解析包异常，导致不能安装，此时放开此方法及关闭Install Run即可
android.injected.testOnly=false
#
#
#jiagu
joker=/Users/joker/workspace/jiagu/360jiagubao_mac/jiagu/jiagu.jar
mylovehang=/Users/mylovehang/Documents/360jiagubao_mac/jiagu/jiagu.jar
yinhao=/Users/yinhao/Desktop/workspace/360jiagubao_mac/jiagu/jiagu.jar
ring=/Users/ring/workspace/jiagu/jiagu/jiagu.jar
xiaolu=/Users/xiaolu/workspace/360jiagubao_mac/jiagu/jiagu.jar
kun=/Users/kun/WorkSpace/360jiagubao_mac/jiagu/jiagu.jar
mdl=/Users/mdl/Documents/360jiagubao_mac/jiagu/jiagu.jar
#
#
# true GrowingIO 参与编译，false 不参与编译
gioenable=false
#
#
#jenkins持续集成
# 查看最新版本号及code    http://fbi.com:8888/monkey_log/version/wood_version.txt
#本地定义每个版本的版本号及Code
LOCAL_VERSION_NAME=2.5.0
LOCAL_VERSION_CODE=252
#jenkins parameter 服务器可变参数
#是否打正式上线包,jenkins上面有配置，本地也可以通过改动来打包
RELEASE_PACKAGE=false
#下面两个参数不要动,为jenkins后台执行脚本改
VERSION_NAME=
VERSION_CODE=0
#
#
#
#
###################################编译优化####################################################################
#开启gradle并行编译，开启daemon，调整jvm内存大小
org.gradle.jvmargs=-Xmx4096m -XX\:MaxPermSize\=1024m -XX\:+HeapDumpOnOutOfMemoryError -Dfile.encoding\=UTF-8
org.gradle.daemon=true
org.gradle.parallel=true
#systemProp.http.proxyPort=1087
#开启gradle缓存
org.gradle.caching=true
android.enableBuildCache=true
#开启kotlin的增量
kotlin.incremental=true
kotlin.incremental.java=true
kotlin.incremental.js=true
#Gradle 构建缓存支持 ,需要 Gradle 4.3 及以上版本；低版本则禁用缓存
kotlin.caching.enabled=true
#开启kotlin并行编译
#项目中并行执行任务
#支持的 Gradle 最低版本是 4.1，相应的 Android Graldle Plugin 则是 3.0  Kotlin 1.3.20以上
#这个功能对于自定义了源文件路径的项目非常有用，原本独立的源路径都支持并行编译了。对于多平台项目，
# 也可以对不同目标平台并行构建。而Android，debug和release的编译任务可以并行执行。
kotlin.parallel.tasks.in.project=true
##跳过Kapt编译、Kotlin 1.3.20
#kapt avoiding 如果用kapt依赖的内容没有变化，会完全重用编译内容，省掉最上图中的:app:kaptGenerateStubsDebugKotlin的时间
kapt.include.compile.classpath=false
#优化kapt
#并行运行kapt1.2.60版本以上支持
# 对 worker 进行了优化，使编译更快！
kapt.use.worker.api=true
#增量编译 kapt1.3.30版本以上支持
#KAPT 支持注解处理器增量编译
#KAPT 已经支持注解处理器增量编译，该特性仍处灰度实验阶段，你可以通过在gradle.properties中添加以下配置来启用
#需要指出的是，在现有版本中引入任何非增量编译的注解处理器或者依赖的变化（截止目前，包括内部声明的修改）都会导致该模块的注解处理过程退化为非增量模式。
#后续会持续跟进该项功能的完善。
kapt.incremental.apt=true
###################################编译优化####################################################################